name: Create Release with Artifact

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*' # Trigger on tag push


jobs:
  get_latest_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Set version number
        id: set_version
        run: echo "::set-output name=version::v3"

  create_release:
    needs: get_latest_version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run a one-line script ðŸš‚
        run: pwd && ls -al

        # Create a new GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
           tag_name: ${{ needs.get_latest_version.outputs.version }}
           release_name: Release ${{ needs.get_latest_version.outputs.version }}
           body: |
             Release created automatically by GitHub Actions.
           draft: false
           prerelease: false


      - name: Upload APK as Release Asset
        uses: actions/upload-artifact@v3
        with:
          name: README_${{ needs.get_latest_version.outputs.version }}.md # Customize the artifact name
          path: README.md

      # - name: Create Release And Upload APKs
      #   uses: ncipollo/release-action@v1
      #   with:
      #     tag: README${{ github.ref }}.md # Customize the artifact name
      #     artifacts: README.md
      #     generateReleaseNotes: true
